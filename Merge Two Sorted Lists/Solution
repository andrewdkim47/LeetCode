/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1 || !l2)
            return !l1 ? !l2 ? nullptr : l2 : l1;
        ListNode* newNode = new ListNode(0);
        ListNode* head = newNode;
        while(l1 && l2) {
            if ((l2->val <= l1->val)) {
                newNode->next = l2;
                l2 = l2->next;
                newNode = newNode->next;
            }
            else if ((l1->val < l2->val)) {
                newNode->next = l1;
                l1 = l1->next;
                newNode = newNode->next;
            }
        }
        if(l1)
            newNode->next = l1;
        if(l2)
            newNode->next = l2;
        return head->next;
    }
};
