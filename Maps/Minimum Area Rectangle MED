https://leetcode.com/problems/minimum-area-rectangle/


class Solution {
public:
    int minAreaRect(vector<vector<int>>& points) {
        int min_area = INT_MAX;
        unordered_map<int, unordered_set<int>> map;
        
        for (auto point : points) {
            map[point[0]].insert(point[1]);
        }
        
        for (int i = 0; i < points.size() - 1; ++i) {
            for (int j = i+1; j < points.size(); ++j) {
                // WE WANT TO SKIP points that create edges. We want only diagonals!
                if (points[i][0] == points[j][0] || points[i][1] == points[j][1]) {
                    continue;
                }
                
                if (map[points[i][0]].count(points[j][1]) && map[points[j][0]].count(points[i][1])) {
                    min_area = min(min_area, abs(points[i][0] - points[j][0]) * abs(points[i][1] - points[j][1]));
                }
            }
        }
        if (min_area == INT_MAX) return 0;
        return min_area;
    }

};
