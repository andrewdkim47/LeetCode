class Mystring { 
    // Initialise the char array 
    char* str; 
  
public: 
    // No arguments Constructor 
    Mystring() {
        str = new char[1]; 
        str[0] = '\0'; 
    }
  
    // Constructor with 1 arguments 
    Mystring(char* val) {
        if (val == nullptr) { 
            str = new char[1]; 
            str[0] = '\0'; 
        } 
        else { 
            str = new char[strlen(val) + 1]; 
            strcpy(str, val);
        } 
    }
  
    // Copy Constructor 
    Mystring(const Mystring& source) {
        str = new char[strlen(source.str) + 1]; 
        strcpy(str, source.str); 
    }
  
    // Move Constructor Mystring{Mystring}
    Mystring(Mystring&& source) {
        str = source.str; 
        source.str = nullptr; 
    }
    
    // operator overload = 
    Mystring operator=(const Mystring& source) {
        str = new char[strlen(source.str) + 1]; 
        strcpy(str, source.str); 
    }
  
    // Destructor 
    ~Mystring() { delete str; } 
}; 
