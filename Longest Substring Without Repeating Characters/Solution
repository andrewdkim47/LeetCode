Given a string, find the length of the longest substring without repeating characters

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3.

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
             
             
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> char_to_seen;
        int ans = 0, last = 0;
        
        for (int i = 0; i < s.size(); i++) {
            auto it = char_to_seen.find(s[i]);
            if (it != char_to_seen.end()) {
                last = max(it->second, last);
            }
            ans = max(i - last + 1, ans);
            char_to_seen[s[i]] = i + 1;
        }
        
        return ans;
    }
};
