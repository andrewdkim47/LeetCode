https://leetcode.com/problems/binary-search/submissions/

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int i = nums.size() / 2, low = 0, high = nums.size()-1, n = nums.size();
        
        while (i != 0 || i != n-1) {
            cout << nums[i] << endl;
            if (nums[i] == target) return i;
            if (i+1 < n && nums[i+1] == target) return i+1;
            if (i-1 >= 0 && nums[i-1] == target) return i-1;
            
            if (nums[i] < target) {
                if (i == n-1) return -1;
                if (i+1 < n && nums[i+1] > target) return -1;
                low = i;
                i += (high + 1 - low) / 2;
            }
            else {
                if (i == 0) return -1;
                if (i - 1 >= 0 && nums[i-1] < target) return -1;
                high = i;
                i -= (high - low / 2);
            }
        }
        return (nums[i] == target) ? i : -1;
    }
};
